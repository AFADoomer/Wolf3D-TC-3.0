// Static objects and item pickups
class ClassicDecoration : Actor
{
	Default
	{
		//$Category Wolfenstein 3D/Decorations
		//$NotAngled

		+SOLID		//Combining 'Solid' with a Height of 0 lets actors
		Radius 32;	// walk over these seamlessly if the actor has the
		Height 0;	// CANPASS flag...  Otherwise they are blocked.
	}

	States
	{
		Spawn:
			UNKN A -1;
			Stop;
	}
}

class Score : StackableInventory
{
	int lifeamount;

	Property LifeAmount:lifeamount;

	Default
	{
		Inventory.MaxAmount 0x7FFFFFFF;
		Score.LifeAmount 40000;
	}

	static void CheckLifeAmount(Actor owner)
	{
		if (!owner) { return; }

		let points = Score(owner.FindInventory("Score"));

		if (points && points.amount >= points.lifeamount)
		{
			points.lifeamount += points.Default.lifeamount;
			LifeHandler.GiveLife(owner);
		}
	}

	override void Tick()
	{
		if (owner && amount >= lifeamount)
		{
			lifeamount += Default.lifeamount;
			LifeHandler.GiveLife(owner);
		}

		Super.Tick();
	}
}

class PoolofWater : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			POL1 A -1;
			Stop;
	}
} 

class OilDrum : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			BARL C -1;
			Stop;
	}
} 

class TableandChairs : ClassicDecoration
{
	Default
	{
		Height 32;
	}

	States
	{
		Spawn:
			TAB1 A -1;
			Stop;
	}
} 

class FloorLamp : ClassicDecoration
{
	Default
	{
		Height 32;
	}

	States
	{
		Spawn:
			LIT1 A -1 BRIGHT;
			Stop;
	}
} 

class HangingChandelier : ClassicDecoration
{
	Default
	{
		-SOLID
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			LIT3 A -1 BRIGHT;
			Stop;
	}
} 

class HangingSkeleton : ClassicDecoration
{
	Default
	{
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			HNG1 A -1;
			Stop;
	}
} 

class DogFood : Health
{
	Default
	{
		//$Category Wolfenstein 3D/Health
		//$Color 1
		//$NotAngled

		+Inventory.AUTOACTIVATE
		Inventory.Amount 4;
		Inventory.MaxAmount 100;
		Inventory.PickupSound "pickups/food";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			HLTH C -1;
			Loop;
	}
}

class StoneColumn : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			COLW A -1;
			Stop;
	}
}

class Plant : ClassicDecoration
{
	Default
	{
		Height 40;
	}

	States
	{
		Spawn:
			PLT1 A -1;
			Stop;
	}
} 

class Skeleton : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			BONC A -1;
			Stop;
	}
} 

class Sink : ClassicDecoration
{
	Default
	{
		Height 40;
	}

	States
	{
		Spawn:
			SINK A -1;
			Stop;
	}
} 

class PlantinVase : ClassicDecoration
{
	Default
	{
		Height 50;
	}

	States
	{
		Spawn:
			PLT2 A -1;
			Stop;
	}
} 

class Vase : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			VASE C -1;
			Stop;
	}
} 

class Table : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			TAB2 A -1;
			Stop;
	}
} 

class GreenCeilingLight : ClassicDecoration
{
	Default
	{
		-SOLID
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			LIT5 A -1 BRIGHT;
			Stop;
	}
}

class KitchenUtensils : ClassicDecoration
{
	Default
	{
		-SOLID
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			POT1 A -1;
			Stop;
	}
} 

class SuitofArmor : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			KNIG A -1;
			Stop;
	}
} 

class EmptyCage : ClassicDecoration
{
	Default
	{
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			CAG1 A -1;
			Stop;
	}
} 

class Cage : ClassicDecoration
{
	Default
	{
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			CAG2 A -1;
			Stop;
	}
} 

class Bones : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			POB1 A -1;
			Stop;
	}
} 

class YellowKey : Key
{
	Default
	{
		Inventory.PickupSound "pickups/key";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			KEYS A -1;
			Stop;
	}
}

class BlueKey : Key
{
	Default
	{
		Inventory.PickupSound "pickups/key";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			KEYS B -1;
			Stop;
	}
}

class Bed : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			BED1 A -1;
			Stop;
	}
} 

class Basket : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			BASK A -1;
			Stop;
	}
}

class PlateofFood : Health
{
	Default
	{
		//$Category Wolfenstein 3D/Health
		//$Color 1
		//$NotAngled

		+Inventory.AUTOACTIVATE
		Inventory.Amount 10;
		Inventory.MaxAmount 100;
		Inventory.PickupSound "pickups/food";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			HLTH D -1;
			Loop;
	}
}

class FirstAidKit : Health
{
	Default
	{
		//$Category Wolfenstein 3D/Health
		//$Color 1
		//$NotAngled

		+Inventory.AUTOACTIVATE
		Inventory.Amount 25;
		Inventory.MaxAmount 100;
		Inventory.PickupSound "pickups/medkit";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			HLTH E -1;
			Loop;
	}
}

class JeweledCross : Score
{
	Default
	{
		//$Category Wolfenstein 3D/Treasure
		//$Color 14
		//$NotAngled

		+COUNTITEM
		Inventory.Amount 100;
		Inventory.PickupSound "pickups/cross";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			TREC A -1;
			Stop;
	}
}

class Chalice : Score
{
	Default
	{
		//$Category Wolfenstein 3D/Treasure
		//$Color 14
		//$NotAngled

		+COUNTITEM
		Inventory.Amount 500;
		Inventory.PickupSound "pickups/cup";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			TREC C -1;
			Stop;
	}
}

class Chest : Score
{
	Default
	{
		//$Category Wolfenstein 3D/Treasure
		//$Color 14
		//$NotAngled

		+COUNTITEM
		Inventory.Amount 1000;
		Inventory.PickupSound "pickups/chest";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			TREC D -1;
			Stop;
	}
}

class Crown : Score
{
	Default
	{
		//$Category Wolfenstein 3D/Treasure
		//$Color 14
		//$NotAngled

		+COUNTITEM
		Inventory.Amount 5000;
		Inventory.PickupSound "pickups/crown";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			TREC B -1;
			Stop;
	}
}

class Life : CustomInventory
{
	Default
	{
		//$Category Wolfenstein 3D/Health
		//$Color 1
		//$NotAngled

		+COUNTITEM
		+Inventory.AUTOACTIVATE
		Inventory.Amount 1;
		Inventory.MaxAmount 0;
		Inventory.PickupSound "pickups/life";
		Inventory.PickupMessage "";
	}

	States
	{
		Spawn:
			LIFE A -1;
			Loop;
		Pickup:
			LIFE A 0 {
				A_GiveInventory("Health", 100);
				A_GiveInventory("WolfClip", 25);

				LifeHandler.GiveLife(self);

				return true;
			}
			Stop;
	}
}

class BoneswithBlood : Health
{
	Default
	{
		//$Category Wolfenstein 3D/Health
		//$Color 1
		//$NotAngled

		+Inventory.AUTOACTIVATE
		Inventory.Amount 1;
		Inventory.MaxAmount 11;
		Inventory.PickupSound "slurpie";
		Inventory.PickupMessage "";
	}
	States
	{
		Spawn:
			HLTH B -1;
			Loop;
	}
}

class WoodBarrel : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			BAR2 A -1;
			Stop;
	}
} 

class WellwithWater : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			WEL1 A -1;
			Stop;
	}
} 

class DryWell : ClassicDecoration
{
	Default
	{
		Height 30;
	}

	States
	{
		Spawn:
			WEL2 A -1;
			Stop;
	}
} 

class PoolofBlood : BonesWithBlood
{
	States
	{
		Spawn:
			HLTH A -1;
			Loop;
	}
}

class NaziFlag : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			FLAC A -1;
			Stop;
	}
}

class AardwolfSign : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			AARD A -1;
			Stop;
	}
}

class CrushedBones1 : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			POB2 C -1;
			Stop;
	}
} 

class CrushedBones2 : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			POB3 A -1;
			Stop;
	}
} 

class CrushedBody : ClassicDecoration
{
	Default
	{
		-SOLID
	}

	States
	{
		Spawn:
			POB4 A -1;
			Stop;
	}
} 

class HangingUtensils : ClassicDecoration
{
	Default
	{
		-SOLID
		+SPAWNCEILING
		+NOGRAVITY
		Height 64;
	}

	States
	{
		Spawn:
			POT2 A -1;
			Stop;
	}
} 

class Stove : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			STOV A -1;
			Stop;
	}
} 

class SpearRack : ClassicDecoration
{
	Default
	{
		Height 64;
	}

	States
	{
		Spawn:
			SPEC A -1;
			Stop;
	}
} 

class HangingVines : ClassicDecoration
{
	Default
	{
		-SOLID
		+SPAWNCEILING
		+NOGRAVITY
	}

	States
	{
		Spawn:
			VINE A -1;
			Stop;
	}
}

class DeadGuard : ClassicDecoration
{
	Default
	{
		Scale 1.0;
	}

	States
	{
		Spawn:
			WBRN N -1;
			Stop;
	}
}
