class ClassicBase : Actor
{
	bool active;
	int scoreamt;
	int skillhealth0, skillhealth1, skillhealth2, skillhealth3;

	Property ScoreAmount:scoreamt;
	Property SkillHealth:skillhealth0, skillhealth1, skillhealth2, skillhealth3;

	Default
	{
		//$Category Wolfenstein 3D/Enemies
		//$Color 4

		MONSTER;
		+FULLVOLACTIVE
		+FULLVOLDEATH
		+DONTGIB

		Height 64;
		Radius 24;
		Mass 10000;
		DeathHeight 0;
		Painchance 256;
		BloodColor "FF 00 00";
		DamageFactor "WolfNazi", 0.0;
	}

	override void PostBeginPlay()
	{
		switch (skill)
		{
			default:
			case 0:
				health = skillhealth0 ? skillhealth0 : Default.health;
				break;
			case 1:
				health = skillhealth1 ? skillhealth1 : Default.health;
				break;
			case 2:
				health = skillhealth2 ? skillhealth2 : Default.health;
				break;
			case 3:
				health = skillhealth3 ? skillhealth3 : Default.health;
				break;
		}

		if (!Default.bNoBlood) { bNoBlood = g_noblood; }

		Super.PostBeginPlay();
	}

	States
	{
		See:
			"####" A 1 {
				if (!active)
				{
					if (tid)
					{
						int lookup = (tid > 500) ? tid - 500 : tid;

						let it = ActorIterator.Create(lookup, "Actor");
						Actor mo;

						while (mo = Actor(it.Next()))
						{
							if (mo == self) { continue; }
							if (!mo.bIsMonster || mo.bDormant || !mo.bShootable || mo.health <= 0) { continue; }

							if (ClassicBase(mo))
							{
								if (ClassicBase(mo).active) { continue; }
								else { ClassicBase(mo).active = true; }
							}

							mo.target = target;
							mo.SetState(SeeState);
						}
					}

					active = true;
				}

				SetStateLabel("Chase");
			}
	}

	void A_DeathDrop()
	{
		DropItem drops = GetDropItems();
		DropItem item;

		if (drops != null)
		{
			for (item = drops; item != null; item = item.Next)
			{
				String itemName = String.Format("%s", item.Name); // Don't know why I have to do this and the Length check, but 'DropItem ""' crashes without it, even if I check for != "", != null, etc...
				if (itemName.Length() > 0 && item.Name != 'None' && Random[DropItem](0, 256) <= item.Probability)
				{
					Actor mo = Spawn(item.Name, pos, ALLOW_REPLACE);

					if (mo)
					{
						mo.bDropped = true;
						mo.bNoGravity = false;	// [RH] Make sure it is affected by gravity

						let inv = Inventory(mo);
						if (inv)
						{
							inv.ModifyDropAmount(item.Amount);
							inv.bTossed = true;
							if (inv.SpecialDropAction(self))
							{
								// The special action indicates that the item should not spawn
								inv.Destroy();
							}
						}
					}
				}
			}
		}
	}

	void RemoveEnemies()
	{
		ThinkerIterator Actors = ThinkerIterator.Create("ClassicBase");
		Actor mo;

		while (mo = Actor(Actors.Next()))
		{
			if (mo == self) { continue; }
			if (!mo.bIsMonster && !mo.bMissile) { continue; }

			mo.SetStateLabel("null");
		}

	}
}

class ClassicNazi : ClassicBase
{
	int deathtics;
	bool longdeath;

	Property LongDeath:longdeath;
	Property DeathTics:deathtics;

	Default
	{
		ClassicNazi.LongDeath false;
		ClassicNazi.DeathTics 8;
	}

	States
	{
		Spawn.Stand:
			"####" EEEEEE 4 A_LookEx (0, 0, 0, 2048, 0, "See");
			Loop;
		Spawn.PatrolNoClip:
			"####" A 0 A_JumpIf(angle % 45 != 0 || angle % 90 == 0, "TurnAround"); // Only do special "noclip" handling at precisely 45 degree diagonal angles
			"####" A 6 A_Warp(AAPTR_DEFAULT, 45, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol");
			"####" A 6 A_Warp(AAPTR_DEFAULT, 90, 0, 0, 0, WARPF_STOP | WARPF_INTERPOLATE, "Spawn.Patrol");
			"####" A 0 A_Jump(256, "TurnAround");
		TurnAround:
			"####" E 10;
			"####" EEE 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			"####" A 0 A_JumpIf((vel.x != 0) || (vel.y != 0), "Spawn.Patrol");
			"####" E 10;
			"####" EEE 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			"####" A 0 A_JumpIf((vel.x != 0) || (vel.y != 0), "Spawn.Patrol");
			"####" A 0 A_SetAngle(angle + 180);
			"####" A 0 A_Jump(256, "Spawn.Patrol");
		Spawn.Patrol:
			"####" AAA 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			"####" AAA 1 A_LookEx (0, 0, 0, 2048, 0, "See");
			"####" BBBBBB 1 A_LookEx (0, 0, 0, 2048, 0, "See");
			"####" CCC 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			"####" CCC 1 A_LookEx (0, 0, 0, 2048, 0, "See");
			"####" DDDDDD 1 A_LookEx (0, 0, 0, 2048, 0, "See");
			"####" A 0 A_JumpIf((vel.x == 0) && (vel.y == 0), "Spawn.PatrolNoClip");
			Loop;
		Chase:
			"####" AAAAA 1 A_Chase;
			"####" A 1;
			"####" BBBB 1 A_Chase;
			"####" CCCCC 1 A_Chase;
			"####" CC 1;
			"####" DDDD 1 A_Chase;
			Loop;
		Pain:
			"####" A 0 A_JumpIf(health % 1, "Pain.Alt");
			"####" F 5 A_Pain;
			"####" A 0 A_Jump(256, "Chase");
		Pain.Alt:
			"####" J 5 A_Pain;
			"####" A 0 A_Jump(256, "Chase");
		Death:
			"####" A 0 {
				A_Scream();
				A_DeathDrop();
			}
			"####" K 7 A_SetTics(deathtics - 1);
			"####" L 8 A_SetTics(deathtics);
			"####" M 7 {
				A_SetTics(deathtics - 1);
				A_GiveToTarget("Score", scoreamt);
			}
			"####" N 0 { if (longdeath) { A_SetTics(deathtics); } }
		Dead:
			"####" N -1 { if (longdeath) { frame = 14; } }
		Stop;
	}
}

class ClassicBoss : ClassicBase
{
	Default
	{
		+JUSTHIT
		+AMBUSH
		+LOOKALLAROUND
		+NORADIUSDMG

		MaxTargetRange 256;
		Painchance 0;
	}
}


class Dog : ClassicNazi
{
	Default
	{
		//$Title Dog

		-CANUSEWALLS
		-ACTIVATEMCROSS

		Health 1;
		Height 38;
		Speed 5;
		MeleeDamage 2;
		SeeSound "dog/sight";
		AttackSound "dog/attack";
		DeathSound "dog/death";

		ClassicBase.ScoreAmount 200;
	}

	States
	{
		Spawn:
			WDOG A 0;
			Goto Spawn.Patrol;
		TurnAround:
			WDOG AB 5;
			WDOG CCC 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			WDOG A 0 A_JumpIf((vel.x != 0) || (vel.y != 0), "Spawn.Patrol");
			WDOG DA 5;
			WDOG BBB 1 ThrustThing (int(angle * 256 / 360), 1, 0, 0);
			WDOG A 0 A_JumpIf((vel.x != 0) || (vel.y != 0), "Spawn.Patrol");
			WDOG A 0 A_SetAngle(angle + 180);
			Goto Spawn.Patrol;
		Spawn.Stand:
			WDOG AAAABBBBCCCCDDDD 1 A_LookEx (0, 0, 0, 2048, 0, "See");
			Loop;
		Melee:
			WDOG E 0 A_Stop;
			WDOG EF 5 A_FaceTarget;
			WDOG G 5 A_CustomMeleeAttack(random(1,15));
			WDOG EA 5;
			Goto Chase;
		Death:
			WDOG A 0 A_Scream;
			WDOG HI 5;
			WDOG J 5 A_GiveToTarget("Score", scoreamt);
		Dead:
			WDOG K -1;
			Stop;
	}
}

class Guard : ClassicNazi
{
	Default
	{
		//$Title Guard
		//$Sprite "WBRNE2"

		Health 25;
		Speed 3;
		SeeSound "brown/sight";
		DeathSound "brown/death";
		DropItem "WolfClip";

		ClassicBase.ScoreAmount 100;
	}

	States
	{
		Spawn:
			WBRN A 0;
			Goto Spawn.Stand;
		Missile:
			WBRN # 0 A_Stop;
			WBRN GH 10 A_FaceTarget;
			WBRN I 8 Bright A_WolfAttack(0, "shots/single", 1.0, 64, 64, 2, 4, 160.0);
			Goto Chase;
	}
}

class MGuard : Guard
{
	Default
	{
		//$Title Guard (Moving)
		//$Sprite "WBRNA2"

		+JUSTHIT
	}

	States
	{
		Spawn:
			WBRN A 0;
			Goto Spawn.Patrol;
	}
}

class SS : ClassicNazi
{
	Default
	{
		//$Title SS Guard
		//$Sprite "WBLUE2"

		Health 100;
		Speed 4;
		SeeSound "blue/sight";
		DeathSound "blue/death";

		ClassicBase.ScoreAmount 500;
	}

	States
	{
		Spawn:
			WBLU A 0;
			Goto Spawn.Stand;
		Missile:
			WBLU A 0 A_Stop;
			WBLU GH 10 A_FaceTarget;
			WBLU I 5 Bright A_WolfAttack(0, "shots/burst", 0.666, 64, 64, 2, 4, 160.0);
			WBLU H 5 A_FaceTarget;
			WBLU I 5 Bright A_WolfAttack(0, "shots/burst", 0.666, 64, 64, 2, 4, 160.0);
			WBLU H 5 A_FaceTarget;
			WBLU I 5 Bright A_WolfAttack(0, "shots/burst", 0.666, 64, 64, 2, 4, 160.0);
			WBLU H 5 A_FaceTarget;
			WBLU I 5 Bright A_WolfAttack(0, "shots/burst", 0.666, 64, 64, 2, 4, 160.0);
			Goto Chase;
		Death:
			WBLU A 0 {
				if (target && target.CheckInventory("WolfMachineGun", 1)) { A_SpawnItemEx("WolfClipDrop"); }
				else { A_SpawnItemEx("WolfMachineGun"); }
			}
			Goto Super::Death;
	}
}

class MSS : SS
{
	Default
	{
		//$Title SS Guard (Moving)
		//$Sprite "WBLUA2"

		+JUSTHIT
	}

	States
	{
		Spawn:
			WBLU A 0;
			Goto Spawn.Patrol;
	}
}

class Mutant : ClassicNazi
{
	Default
	{
		//$Title Mutant
		//$Sprite "WMUTE2"

		Health 65;
		Speed 3;
		SeeSound "mutant/sight";
		DeathSound "mutant/death";
		BloodColor "FF 00 FF";
		DropItem "WolfClip";

		ClassicBase.ScoreAmount 700;
		ClassicBase.SkillHealth 45, 55, 55, 65;
		ClassicNazi.LongDeath true;
		ClassicNazi.DeathTics 4;
	}

	States
	{
		Spawn:
			WMUT A 0;
			Goto Spawn.Stand;
		Missile:
			WMUT A 0 A_Stop;
			WMUT G 3 A_FaceTarget;
			WMUT H 10 Bright A_WolfAttack(0, "shots/single", 1.0, 64, 64, 2, 4, 160.0);
			WMUT G 5 A_FaceTarget;
			WMUT I 10 Bright A_WolfAttack(0, "shots/single", 1.0, 64, 64, 2, 4, 160.0);
			WMUT A 0 A_JumpIfCloser(64.0, "Missile");
			Goto Chase;
	}
}

class MMutant : Mutant
{
	Default
	{
		//$Title Mutant (Moving)
		//$Sprite "WMUTA2"

		+JUSTHIT
	}

	States
	{
		Spawn:
			WMUT A 0;
			Goto Spawn.Patrol;
	}
}

class Officer : ClassicNazi
{
	Default
	{
		//$Title Officer
		//$Sprite "WWHTE2"

		Speed 5;
		Health 50;
		SeeSound "white/sight";
		AttackSound "shots/single";
		DeathSound "white/death";
		DropItem "WolfClip";

		ClassicBase.ScoreAmount 400;
		ClassicNazi.LongDeath true;
		ClassicNazi.DeathTics 6;
	}

	States
	{
		Spawn:
			WWHT A 0;
			Goto Spawn.Stand;
		Missile:
			WWHT A 0 A_Stop;
			WWHT G 3 A_FaceTarget;
			WWHT H 10 A_FaceTarget;
			WWHT I 5 Bright A_WolfAttack(0, "shots/single", 1.0, 64, 64, 2, 4, 160.0);
			Goto Chase;
	}
}


class MOfficer : Officer
{
	Default
	{
		//$Title Officer (Moving)
		//$Sprite "WWHTA2"

		+JUSTHIT
	}

	States
	{
		Spawn:
			WWHT A 0;
			Goto Spawn.Patrol;
	}
}

class Hans : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title Hans Grosse

		Health 1200;
		Speed 3;
		SeeSound "hans/sight";
		DeathSound "hans/death";
		DropItem "YellowKey";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 850, 950, 1050, 1200;
	}

	States
	{
		Spawn:
			WBOS A 5 A_Look;
			Loop;
		Walk:
			WBOS AAAAA 1 A_Chase (null, null);
			WBOS A 1;
			WBOS BBBB 1 A_Chase (null, null);
			WBOS CCCCC 1 A_Chase (null, null);
			WBOS CC 1;
			WBOS DDDD 1 A_Chase (null, null);
		Chase:
			WBOS AAAAA 1 A_Chase (null, "Missile");
			WBOS A 1;
			WBOS BBBB 1 A_Chase (null, "Missile");
			WBOS CCCCC 1 A_Chase (null, "Missile");
			WBOS CC 1;
			WBOS DDDD 1 A_Chase (null, "Missile");
			Loop;
		Missile:
			WBOS E 15 A_FaceTarget;
			WBOS F 5 A_FaceTarget;
			WBOS GFGFGE 5 Bright A_WolfAttack(0, "boss/attack", 0.666, 64, 64, 2, 4, 160.0);
			WBOS A 0 A_JumpIfCloser(64, "Missile");
			Goto Walk;
		Death:
			WBOS H 3 A_DeathDrop();
			WBOS H 4 A_GiveToTarget("Score", scoreamt);
			WBOS I 8 A_Scream;
			WBOS J 7 A_BossDeath;
		Dead:
			WBOS K -1;
			Stop;
	}
}

class DrSchabbs : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title Dr. Schabbs

		Health 850;
		Speed 4;
		SeeSound "schabbs/sight";
		DeathSound "schabbs/death";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 850, 950, 1550, 2400;
	}

	States
	{
		Spawn:
			WBO3 A 5 A_Look;
			Loop;
		Chase:
			WBO3 AAAAA 1 A_Chase;
			WBO3 A 1;
			WBO3 BBBB 1 A_Chase;
			WBO3 CCCCC 1 A_Chase;
			WBO3 CC 1;
			WBO3 DDDD 1 A_Chase;
			Loop;
		Missile:
			WBO3 E 15 A_FaceTarget;
			WBO3 F 5 A_SpawnProjectile("Syringe", 30, 18, 0);
			Goto Chase;
		Death:
			WBO3 A 75 A_Scream;
			WBO3 H 5;
			WBO3 I 5 A_GiveToTarget("Score", 5000);
			WBO3 J 5;
			WBO3 K 5 A_BossDeath;
		Dead:
			WBO3 K -1;
			Stop;
		Death.Cam:
			WBO3 K 5 A_FaceTarget;
			WBO3 K 5 RemoveEnemies();
			WBO3 K 60 A_SpawnItemEx("DeathCam", -64.0, 0, 32.0, 0, 0, 0, 180.0, 0, 0, 999);
			WBO3 A 60;
			WBO3 A 60 A_Scream;
			WBO3 HIJK 5;
			WBO3 K -1;
			Stop;
	}
}

class HitlerGhost : ClassicNazi
{
	Default
	{
		//$Title Fake Hitler

		+NOGRAVITY
		+DROPOFF
		+SPAWNFLOAT
		+FLOAT
		+JUSTHIT
		+AMBUSH
		+LOOKALLAROUND
		+NORADIUSDMG

		Health 200;
		Speed 4;
		Painchance 0;
		SeeSound "hgst/sight";
		AttackSound "";
		DeathSound "hgst/death";
		BloodColor "00 00 00";

		ClassicBase.ScoreAmount 2000;
		ClassicBase.SkillHealth 200, 300, 400, 500;
	}
	
	States
	{
		Spawn:
			WHGT A 0;
			Goto Spawn.Stand;
		Chase:
			WHGT AAAAA 1 A_Chase;
			WHGT A 1;
			WHGT BBBB 1 A_Chase;
			WHGT CCCCC 1 A_Chase;
			WHGT CC 1;
			WHGT DDDD 1 A_Chase;
			Loop;
		Missile:
			WHGT E 4 A_FaceTarget;
			WHGT E 0 A_JumpIf(g_fastfireballs, "Missile.Fast");
			WHGT EEEEEEEE 4 Bright A_SpawnProjectile("GhostFireBall", 30, 0, 0);
			Goto Chase;
		Missile.Fast:
			WHGT EEEEEEEE 4 Bright A_SpawnProjectile("FastGhostFireBall", 30, 0, 0);
			Goto Chase;
		Death:
			WHGT F 5 A_DeathDrop();
			WHGT G 5 A_Scream;
			WHGT HI 5;
			WHGT J 5 A_GiveToTarget("Score", scoreamt);
		Dead:
			WHGT K -1;
			Stop;
	}
}

class HitlerMech : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title Hitler Mech

		Health 400;
		Speed 2;
		SeeSound "hitler1/sight";
		AttackSound "boss/attack";
		PainSound "hitler1/death";
		DeathSound "hitler2/sight";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 400, 475, 525, 600;
	}

	States
	{
		Spawn:
			WHR1 AAAAAAAAAAAA 1 A_Look;
			Loop;
		Chase:
			WHR1 AAAAA 1 A_Chase;
			WHR1 AAA 1 A_Pain;
			WHR1 BBBB 1 A_Chase;
			WHR1 CCCCC 1 A_Chase;
			WHR1 CCC 1 A_Pain;
			WHR1 DDDD 1 A_Chase;
			Loop;
		Missile:
			WHR1 E 15 A_FaceTarget;
			WHR1 F 5 A_FaceTarget;
			WHR1 GFGF 5 Bright A_WolfAttack(0, "boss/attack", 1.0, 64, 64, 2, 4, 160.0);
			Goto Chase;
		Death:
			WHR1 H 5 A_Scream;
			WHR1 I 5;
			WHR1 J 5 A_GiveToTarget("Score", scoreamt);
			WHR1 K 0 A_SpawnItemEx("Hitler");
			WHR1 K 1 A_BossDeath;
			WHR1 K -1;
			Stop;
	}

}

class Hitler : ClassicBoss
{
	Default
	{
		Health 400;
		Speed 4;
		DeathSound "hitler2/death";
		PainSound "slurpie";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 400, 475, 525, 600;
	}

	States
	{
		Spawn:
			WHR2 A 5 A_Look;
			Loop;
		Chase:
			WHR2 AAA 1 A_Chase;
			WHR2 AA 1;
			WHR2 B 1 A_Chase;
			WHR2 CCC 1 A_Chase;
			WHR2 CC 1;
			WHR2 D 1 A_Chase;
			Loop;
		Missile:
			WHR2 G 15 A_FaceTarget;
			WHR2 H 5 A_FaceTarget;
			WHR2 IHIH 5 Bright A_WolfAttack(0, "boss/attack", 1.0, 64, 64, 2, 4, 160.0);
			Goto Chase;
		Death:
			WHR2 A 70 A_Scream;
			WHR2 J 5 A_Pain;
			WHR2 K 5 A_GiveToTarget("Score", scoreamt);
			WHR2 LMNO 5;
			WHR2 P 5 A_BossDeath;
		Dead:
			WHR2 Q -1;
			Stop;
		Death.Cam:
			WHR2 Q 5 A_FaceTarget;
			WHR2 Q 5 RemoveEnemies();
			WHR2 Q 60 A_SpawnItemEx("DeathCam", -64.0, 0, 32.0, 0, 0, 0, 180.0, 0, 0, 999);
			WHR2 A 60;
			WHR2 A 70 A_Scream;
			WHR2 J 5 A_Pain;
			WHR2 KLMNOP 5;
			WHR2 Q -1;
			Stop;
	}
}

class Giftmacher : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title Giftmacher

		Health 850;
		Speed 3;
		SeeSound "gift/sight";
		DeathSound "gift/death";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 850, 950, 1050, 1200;
	}

	States
	{
		Spawn:
			WBO8 A 5 A_Look;
			Loop;
		Chase:
			WBO8 AAAAA 1 A_Chase;
			WBO8 A 1;
			WBO8 BBBB 1 A_Chase;
			WBO8 CCCCC 1 A_Chase;
			WBO8 CC 1;
			WBO8 DDDD 1 A_Chase;
			Loop;
		Missile:
			WBO8 E 15 A_FaceTarget;
			WBO8 F 5 Bright A_SpawnProjectile("WolfRocket", 30, 13, 0);
			Goto Chase;
		Death:
			WBO8 A 70 A_Scream;
			WBO8 GH 5;
			WBO8 I 5 A_GiveToTarget("Score", scoreamt);
			WBO8 J 1 A_BossDeath;
		Dead:
			WBO8 J -1;
			Stop;
		Death.Cam:
			WBO8 J 5 A_FaceTarget;
			WBO8 J 5 RemoveEnemies();
			WBO8 J 60 A_SpawnItemEx("DeathCam", -64.0, 0, 32.0, 0, 0, 0, 180.0, 0, 0, 999);
			WBO8 A 60;
			WBO8 A 70 A_Scream;
			WBO8 GHI 5;
			WBO8 J -1;
			Stop;
	}

}

class GretelGrosse : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title Gretel Grosse

		Health 850;
		Speed 3;
		MaxTargetRange 256;
		SeeSound "gretel/sight";
		DeathSound "gretel/death";
		DropItem "YellowKey";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 850, 950, 1550, 2400;
	}

	States
	{
		Spawn:
			WBO4 A 5 A_Look;
			Loop;
		Walk:
			WBO4 AAAAA 1 A_Chase (null, null);
			WBO4 A 1;
			WBO4 BBBB 1 A_Chase (null, null);
			WBO4 CCCCC 1 A_Chase (null, null);
			WBO4 CC 1;
			WBO4 DDDD 1 A_Chase (null, null);
		Chase:
			WBO4 AAAAA 1 A_Chase (null, "Missile");
			WBO4 A 1;
			WBO4 BBBB 1 A_Chase (null, "Missile");
			WBO4 CCCCC 1 A_Chase (null, "Missile");
			WBO4 CC 1;
			WBO4 DDDD 1 A_Chase (null, "Missile");
			Loop;
		Missile:
			WBO4 E 15 A_FaceTarget;
			WBO4 F 5 A_FaceTarget;
			WBO4 GFGFGE 5 Bright A_WolfAttack(0, "boss/attack", 0.666, 64, 64, 2, 4, 160.0);
			WBO4 A 0 A_JumpIfCloser(64, "Missile");
			Goto Walk;
		Death:
			WBO4 H 3 A_DeathDrop();
			WBO4 H 4 A_GiveToTarget("Score", scoreamt);
			WBO4 I 8 A_Scream;
			WBO4 J 7 A_BossDeath;
		Dead:
			WBO4 K -1;
			Stop;
	}
}

class Fettgesicht : ClassicBoss
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Bosses
		//$Title FettGesicht

		Health 850;
		Speed 4;
		Damage 4;
		SeeSound "fatface/sight";
		DeathSound "fatface/death";

		ClassicBase.ScoreAmount 5000;
		ClassicBase.SkillHealth 850, 950, 1050, 1200;
	}

	States
	{
		Spawn:
			WBO5 A 5 A_Look;
			Loop;
		Chase:
			WBO5 AAAAA 1 A_Chase;
			WBO5 A 1;
			WBO5 BBBB 1 A_Chase;
			WBO5 CCCCC 1 A_Chase;
			WBO5 CC 1;
			WBO5 DDDD 1 A_Chase;
			Loop;
		Missile:
			WBO5 E 15 A_FaceTarget;
			WBO5 F 5 A_FaceTarget;
			WBO5 G 5 Bright A_SpawnProjectile("WolfRocket", 30, 13, 0);
			WBO5 E 0 A_FaceTarget;
			WBO5 HGH 5 Bright A_WolfAttack(0, "boss/attack", 1.0, 64, 64, 2, 4, 160.0);
			Goto Chase;
		Death:
			WBO5 A 70 A_Scream;
			WBO5 JK 5;
			WBO5 L 1 A_GiveToTarget("Score", scoreamt);
			WBO5 L 4 A_BossDeath;
		Dead:
			WBO5 M -1;
			Stop;
		Death.Cam:
			WBO5 M 5 A_FaceTarget;
			WBO5 M 5 RemoveEnemies();
			WBO5 M 60 A_SpawnItemEx("DeathCam", -64.0, 0, 32.0, 0, 0, 0, 180.0, 0, 0, 999);
			WBO5 A 60;
			WBO5 A 70 A_Scream;
			WBO5 JK 5;
			WBO5 L 5;
			WBO5 M -1;
			Stop;
	}
}

class PacManGhost : ClassicBase
{
	Default
	{
		//$Category Wolfenstein 3D/Enemies/Pacman

		MONSTER;
		+FLOAT
		+LOWGRAVITY
		+SPAWNFLOAT
		+INVULNERABLE
		+JUSTHIT
		+LOOKALLAROUND
		+NOBLOOD
		-COUNTKILL
		-CANPUSHWALLS
		-SOLID

		Radius 32;
		Speed 5;
		Painchance 0;
		SeeSound "";
		ActiveSound "";
	}

	States
	{
		Spawn:
			"####" AAAAABBBBB 1 A_Look;
			Loop;
		Chase:
			"####" AAAAABBBBB 1 A_Chase;
			Loop;
		Melee:
			"####" A 0 A_FaceTarget;
			"####" AAAAABBBBB 1 A_CustomMeleeAttack(1, "", "", "WolfNazi", false);
			Goto Chase;
		Dead:
			"####" A -1;
			Loop;
	}
}

class Blinky : PacManGhost
{
	Default
	{
		//$Title Blinky
	}

	States
	{
		Spawn:
			GHO0 A 0;
			Goto Super::Spawn;
	}
}

class Inky : PacManGhost
{
	Default
	{
		//$Title Inky
	}

	States
	{
		Spawn:
			GHO1 A 0;
			Goto Super::Spawn;
	}
}

class Pinky : PacManGhost
{
	Default
	{
		//$Title Pinky
	}

	States
	{
		Spawn:
			GHO2 A 0;
			Goto Super::Spawn;
	}
}

class Clyde : PacManGhost
{
	Default
	{
		//$Title Clyde
	}

	States
	{
		Spawn:
			GHO3 A 0;
			Goto Super::Spawn;
	}
}



